plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "com.gorylenko.gradle-git-properties" version "2.2.2"
    id "application"
}

version "0.1"
group "com.bakuanimation"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-management"

    //tag::graal[]
    compileOnly "org.graalvm.nativeimage:svm"
    annotationProcessor "io.micronaut:micronaut-graal" // <1>
    //end::graal[]

    compile group: 'de.dfki.mary', name: 'voice-upmc-pierre-hsmm', version: '5.2'
    compile group: 'de.dfki.mary', name: 'voice-upmc-jessica-hsmm', version: '5.2'
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.kohsuke', name: 'github-api', version: '1.111'
    implementation "org.slf4j:slf4j-api:1.7.5"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.google.cloud:google-cloud-translate:1.53.0"
    implementation "org.slf4j:slf4j-api:1.7.5"
    implementation "com.drewnoakes:metadata-extractor:2.12.0"
    implementation "com.mortennobel:java-image-scaling:0.8.6"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testCompile "org.assertj:assertj-core:3.15.0"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3'

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.assertj:assertj-core"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

gitProperties {
    // using any tags (not limited to annotated tags) for "git.commit.id.describe" property
    // see http://ajoberstar.org/grgit/grgit-describe.html for more info about the describe method and available parameters
    // 'it' is an instance of org.ajoberstar.grgit.Grgit
    customProperty 'git.commit.describe', { it.describe(tags:true) } 
}

test.classpath += configurations.developmentOnly

mainClassName = "com.bakuanimation.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    archiveVersion = ''
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
